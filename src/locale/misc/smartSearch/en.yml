readOnly: This Smart Search query is in read-only mode and cannot be edited.
headers:
    gallery: How would you like to select people?
    examples: Examples
buttonLabels:
    cancel: Cancel
    close: Close
    save: Save
    add: Save selection
    goBack: Go back to query
    addNewFilter: Add / remove people
misc:
    noOptions: No matching tags
filterCategories:
    peopleDatabase: People
    phoneBanking: Phone banking
    campaignActivity: Campaign activity
    surveys: Surveys
    misc: Misc
filterTitles:
    call_history: Based on their call history
    campaign_participation: Based on their campaign participation
    most_active: The most active people
    person_data: Based on their name, address or other data
    person_field: Based on custom fields
    person_tags: Based on their tags
    random: A random selection of people
    sub_query: Based on another Smart Search query
    survey_option: Based on the options they have selected in survey questions
    survey_response: Based on their responses to survey questions
    survey_submission: People who have submitted a survey
    user: People who used Zetkin
all:
    inputString: Start with {startWithSelect}.
    startWithSelect:
        false: an empty list
        true: a list of all the people in the organization
call_history:
    inputString: "{addRemoveSelect} people who {callSelect} at least {minTimesInput} {minTimes, plural, one {time} other {times}} in {assignmentSelect} {timeFrame}."
    addRemoveSelect:
        add: Add
        sub: Remove
    assignmentSelect:
        any: any assignment
        none: This organization doesn't have any call assignments yet
        assignment: assignment "{assignmentTitle}"
    callSelect:
        called: have been called
        reached: have been successfully reached
        notreached: have been unsuccessfully tried
    examples:
        one: Add people who have been successfully reached at least 2 times in any assignment at any point in time.
        two: Remove people who have been called at least 1 time in assignment 'Campaign 2020' during the last 30 days.  
campaign_participation:
    inputString: "{addRemoveSelect} people who {haveSelect} {bookedSelect} for events in {campaignSelect} with {activitySelect} at {locationSelect} {timeFrame}"
    addRemoveSelect:
        add: Add
        sub: Remove
    haveSelect:
        in: have
        notin: have not
    bookedSelect:
        booked: been booked
        signed_up: signed up
    examples:
        one: Add people who have signed up for events in any campaign with any activity at location 'Dorfplatz' at any point in time
        two: Remove people who have not been booked for events in any campaign with activity 'Put up posters' at any location before today.
    campaignSelect:
        any: any campaign
        campaign: campaign "{campaign}"
    locationSelect:
        any: any location
        location: location "{location}"
    activitySelect:
        any: any activity
        activity: activity "{activity}"
most_active:
    inputString: "{addRemoveSelect} the {numPeopleSelect} most active {numPeople, plural, one {person} other {people}} in the organization {timeFrame}." 
    addRemoveSelect:
        add: Add
        sub: Remove
    examples:
        one: Add the 100 most active members of the organization before today.
        two: Remove the 5 most active members of the organization at any point in time.
person_data:
    inputString: "{addRemoveSelect} any person whose {criteria}."
    ellipsis: "..."
    addRemoveSelect:
        add: Add
        sub: remove
    examples:
        one: Add any person whose first name is 'Clara' and whose last name is 'Zetkin'.
        two: Remove any person whose city is Stockholm.
criteria:
    criterion: "{field} matches {value}"
    tuple: "{first} and {second}"
    criteriaSelect:
        first_name: first name
        last_name: last name
        email: email
        gender: gender
        co_address: co-address
        city: city
        zip_code: zip code
        street_address: street address
        alt_phone: alternative phone number
        phone: phone number
        remove: Remove this criteria
person_field: 
    inputString: "{addRemoveSelect} any person whose {field}."
    addRemoveSelect:
        add: Add
        sub: Remove
field:
    preview:
        text: "{fieldName} matches {searchTerm}"
        url: "{fieldName} matches {searchTerm}"
        date: "{fieldName} is {timeFrame}"
    edit:
        none: This organization doesn't have any custom fields yet.
        text: "{fieldSelect} matches {freeTextInput}" 
        url: "{fieldSelect} matches {freeTextInput}" 
        date: "{fieldSelect} is {timeFrame}"
    fieldSelect:
        any: custom field
person_tags:
    inputString:  "{addRemoveSelect} people with {condition} of the following tags: {tags}"
    addRemoveSelect:
        add: Add
        sub: Remove
    examples:
        one: "Add people with at least one of the following tags: 'Member', 'Activist'"
        two: "Remove people with all of the following tags: 'Board member'"
task:
    inputString: "{addRemoveSelect} people who {haveSelect} {taskStatusSelect} {taskSelect}{campaignSelect} {matchingSelect} {timeFrame}"
    addRemoveSelect:
        add: Add
        sub: Remove
    haveSelect:
        in: have
        notin: have not
    examples:
        one: Add people who have completed task "Tell your friends" at least once at any point in time
        two: Add people who have ignored any task in any campaign between 2 and 5 times before today 
    taskStatusSelect:
        completed: completed
        ignored: ignored
        assigned: assigned to
    taskSelect:
        any: any task
        task: task "{task}"
    campaignSelect:
        any: any campaign
        campaign: campaign "{campaign}"
        in: " in "

condition:
    preview:
        all: all
        any: any
        none: none
        min_matching: "at least {minMatching}"
    edit:
        all: "{conditionSelect}"
        any: "{conditionSelect}"
        none: "{conditionSelect}"
        min_matching: "{conditionSelect} {minMatchingInput}"
    conditionSelect:
        all: all
        any: any
        none: none
        min_matching: at least
random:
    inputString: Randomly {addRemoveSelect} {quantity} in the organization.
    addRemoveSelect:
        add: add
        sub: remove
    examples:
        one: Randomly add 20 people in the organization.
        two: Randomly remove 15% of the people in the organization.
sub_query:
    inputString: "{addRemoveSelect} people that match {query}."
    addRemoveSelect:
        add: Add
        sub: Sub
    examples:
        one: Remove people who match Smart Search Query 'People who live in Stockholm'.
        two: Add people who match the target group of call Assignment 'Assignment one'.
query:
    preview:
        standalone: Smart Search query "{queryTitle}"
        callassignment_target: the target group of call assignment "{queryTitle}"
        callassignment_goal: the purpose group of call assignment "{queryTitle}"
    edit:
        none: '{querySelect}'
        standalone: '{querySelect} "{titleSelect}"'
        callassignment_target: '{querySelect} of call assignment "{titleSelect}"'
        callassignment_goal: '{querySelect} of call assignment "{titleSelect}"'
    querySelectLabel:
        none: a Smart Search query
        standalone: Smart Search query
        callassignment_target: the target group
        callassignment_goal: the purpose group
    querySelectOptions:
        none: This organization doesn't have any call assignments or Smart Search queries yet.
        standalone: a standalone Smart Search query
        callassignment_target: the target group of a call assignment
        callassignment_goal: the purpose group of a call assignment
survey_option:
    inputString: "{addRemoveSelect} people who have chosen {conditionSelect} of the following options in {surveySelect} ({questionSelect}): {options}"
    addRemoveSelect:
        add: Add
        sub: Remove
    conditionSelect:
        any: any
        all: all
        none: none        
    surveySelect:
        any: a survey
        none: This organization has no surveys yet
        survey: survey "{surveyTitle}"
    questionSelect:
        any: a question
        none: There are no option questions in this survey
        question: question "{question}"
    examples:
        one: "Remove all people who have chosen all of the following options in survey 'Member survey 2020' (question 'Question one'): 'Sometimes', 'Never'"
        two: "Add all people who have chosen any of the following options in survey 'Member survey' (question 'Question two'): 'Option two'"
survey_response:
    inputString: '{addRemoveSelect} people whose response to {surveySelect} ({questionSelect}) {matchSelect} "{freeTextInput}"'
    addRemoveSelect:
        add: Add
        sub: Remove
    matchSelect:
        in: includes
        notin: does not include
        eq: exactly matches
        noteq: is not
    surveySelect:
        any: a survey
        none: This organization has no surveys yet
        survey: survey "{surveyTitle}"
    questionSelect:
        any: any question
        none: There are no free text questions in this survey
        question: question "{question}"
    examples:
        one: People whose responses to survey 'Member survey' (any question) include 'organize'.
        two: People whose responses to survey 'Member survey' (question 'Question one') exactly match 'organize'.
survey_submission:
    inputString: "{addRemoveSelect} people who have submitted responses to {surveySelect} {timeFrame}."
    addRemoveSelect:
        add: Add
        sub: Remove
    surveySelect:
        any: a survey
        none: This organization has no surveys yet
        survey: survey "{surveyTitle}"
    examples:
        one: People who have submitted responses to survey 'Member survey 2020' before today.
        two: People who have submitted responses to survey 'Member survey' during the last 30 days.
user:
    inputString: "{addRemoveSelect} all people who are {connectedSelect} to a Zetkin user."
    addRemoveSelect:
        add: Add
        sub: Remove
    connectedSelect:
        true: connected
        false: not connected
    examples:
        one: Remove all people who are connected to a Zetkin user.
        two: Add all people who are not connected to a Zetkin user.
quantity:
    preview:
        integer: "{people} {people, plural, one {person} other {people}}"
        percent: "{people} % of the people"
    edit:
        integer: "{numInput} {quantitySelect}"
        percent: "{numInput} {quantitySelect}"
    quantitySelectOptions:
        integer: a number of people
        percent: a percentage of people
    quantitySelectLabel:
        integer: "{people, plural, one {person} other {people}}"
        percent: "% of the people"



